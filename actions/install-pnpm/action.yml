name: 'Install pnpm'
description: 'Install pnpm'

inputs:
  pnpm-version:
    description: 'The version of pnpm to use'
    required: false
    default: '9.11.0'
  node-version:
    description: 'The version of Node.js to use'
    required: false
    default: '20'
  include-cache:
    description: 'Include the cache in the workflow.'
    required: false
    default: 'true'
  pnpm-install-args:
    description: 'The arguments to pass to the pnpm install command.'
    required: false
    default: ''
  npm-token:
    description: 'The npm token to use'
    required: false

runs:
  using: 'composite'
  steps:
    - name: Install pnpm
      uses: pnpm/action-setup@v4
      with:
        version: ${{ inputs.pnpm-version }}

    - name: Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.node-version }}
        cache: 'pnpm'

    - name: Setup .npmrc
      shell: bash
      run: |
        if [[ -z "${{ inputs.npm-token }}" ]]; then
          cp .npmrc.example .npmrc
        else
          sed "s/INSERT_YOUR_GITHUB_TOKEN_HERE/${{ inputs.npm-token }}/g" .npmrc.example > .npmrc
        fi

    - name: Get pnpm store directory
      id: pnpm-cache
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

    - if: ${{ inputs.include-cache == 'true' }}
      uses: actions/cache@v4
      name: Setup pnpm cache
      with:
        path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Install dependencies
      shell: bash
      run: pnpm install ${{ inputs.pnpm-install-args }}
